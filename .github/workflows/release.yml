name: Build and Release

on:
  release:
    types: [created]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: msbuild /p:Configuration=Release /p:Platform="Any CPU" /restore RogerThat/RogerThat.csproj
    
    - name: Publish
      run: dotnet publish RogerThat/RogerThat.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:EnableCompressionInSingleFile=true -p:DebugType=None -p:DebugSymbols=false -o publish
    
    - name: Create ZIP archive
      run: |
        cd publish
        7z a -tzip -snc -scsUTF-8 ../RogerThat-${{ github.event.release.tag_name }}.zip *
      
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: RogerThat-${{ github.event.release.tag_name }}.zip

  sync-to-gitee:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 使用 Gitee Sync Action
      - name: Sync to Gitee
        uses: Yikun/hub-mirror-action@master
        with:
          src: github/yzyyz1387
          dst: gitee/yzyyz
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
          dst_token: ${{ secrets.GITEE_ACCESS_TOKEN }}
          static_list: "RogerThat"
          force_update: true

      # 下载 release 资产
      - name: Download Release Asset
        uses: actions/download-artifact@v4
        with:
          name: RogerThat-${{ github.event.release.tag_name }}.zip

      # 创建 Gitee Release
      - name: Create Gitee Release
        run: |
          curl --header 'Content-Type: application/json' \
               --header 'Accept: application/json' \
               --data-binary "{
                 \"access_token\": \"${{ secrets.GITEE_ACCESS_TOKEN }}\",
                 \"tag_name\": \"${{ github.event.release.tag_name }}\",
                 \"name\": \"${{ github.event.release.name }}\",
                 \"body\": \"${{ github.event.release.body }}\",
                 \"prerelease\": ${{ github.event.release.prerelease }}
               }" \
               --request POST \
               https://gitee.com/api/v5/repos/yzyyz/RogerThat/releases

  update-version:
    needs: [build, sync-to-gitee]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML requests
    
    - name: Get release info and create JSON
      run: |
        python .github/scripts/create_version_json.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: ${{ github.event.release.tag_name }}
        REPO_OWNER: ${{ github.repository_owner }}
        REPO_NAME: ${{ github.event.repository.name }}
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dist'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 