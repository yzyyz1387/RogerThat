name: Build and Release

on:
  release:
    types: [created]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: msbuild /p:Configuration=Release /p:Platform="Any CPU" /restore RogerThat/RogerThat.csproj
    
    - name: Publish
      run: dotnet publish RogerThat/RogerThat.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:EnableCompressionInSingleFile=true -p:DebugType=None -p:DebugSymbols=false -o publish
    
    - name: Create ZIP archive
      run: |
        cd publish
        7z a -tzip -snc -scsUTF-8 ../RogerThat-${{ github.event.release.tag_name }}.zip *
      
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: RogerThat-${{ github.event.release.tag_name }}.zip

    # 同步代码到 Gitee
    - name: Sync to Gitee
      uses: wearerequired/git-mirror-action@master
      env:
        SSH_PRIVATE_KEY: ${{ secrets.GITEE_PRIVATE_KEY }}
      with:
        source-repo: "https://github.com/${{ github.repository }}.git"
        destination-repo: "git@gitee.com:yzyyz/RogerThat.git"

    # 配置 Git
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global --add safe.directory /github/workspace
        mkdir -p ~/.ssh
        echo "${{ secrets.GITEE_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan gitee.com >> ~/.ssh/known_hosts

  update-version:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML requests
    
    - name: Get release info and create JSON
      run: |
        python .github/scripts/create_version_json.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: ${{ github.event.release.tag_name }}
        REPO_OWNER: ${{ github.repository_owner }}
        REPO_NAME: ${{ github.event.repository.name }}
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'dist'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 